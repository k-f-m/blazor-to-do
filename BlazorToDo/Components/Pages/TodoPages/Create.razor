@page "/todos/create"
@inject BlazorToDo.Data.ApplicationDbContext DB
@using BlazorToDo.Data.Models
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Todo" OnValidSubmit="AddTodo" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="task" class="form-label">Task:</label> 
                <InputText id="task" @bind-Value="Todo.Task" class="form-control" /> 
                <ValidationMessage For="() => Todo.Task" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="duedate" class="form-label">Due Date:</label> 
                <InputDate id="duedate" @bind-Value="Todo.DueDate" class="form-control" /> 
                <ValidationMessage For="() => Todo.DueDate" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="priority" class="form-label">Priority:</label> 
                <InputText id="priority" @bind-Value="Todo.Priority" class="form-control" /> 
                <ValidationMessage For="() => Todo.Priority" class="text-danger" /> 
            </div>  
            <div class="mb-3">
                <label for="creationtimestamp" class="form-label">Creation Timestamp:</label> 
                <InputDate id="creationtimestamp" @bind-Value="Todo.CreationTimestamp" class="form-control" /> 
                <ValidationMessage For="() => Todo.CreationTimestamp" class="text-danger" /> 
            </div>   
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/todos">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Todo Todo { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddTodo()
    {
        DB.TodoList.Add(Todo);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/todos");
    }
}
